**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: m.musor.tv
* @MinSWversion:
* @Revision 3 - [28/02/2019] orhan
*   - Fixed/improved scrubbing of elements
* @Revision 2 - [06/01/2017] Netuddki
*   - Icon fixed
* @Revision 1 - [05/01/2017] Netuddki
*   - Added icon tag.
*   - Title fixed.
*   - Corrected ratingsystem. Added rating and rating icon.
*   - Added channel logo.
* @Revision 0 - [03/11/2016] Netuddki
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
*
site {url=musor.tv.m|timezone=Europe/Budapest|maxdays=18|cultureinfo=hu-HU|charset=UTF-8|titlematchfactor=90|nopageoverlaps}
*site {ratingsystem=HU|episodesystem=onscreen|grabengine=|firstshow=0|firstday=0000000}
*
url_index{url|http://m.musor.tv/napi/tvmusor/|channel|/|urldate}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages
urldate.format {datestring|yyyy.MM.dd} 
*index_showsplit.scrub {regex||<div class="card(.*?)<div class="smartpe_to_details_arrow">||}
index_showsplit.scrub {multi|<div class="card|<div class="smartpe_progentry ||<div class="smartpe_to_details_arrow">}
*
index_start.scrub {single|<time|content="|">|</time>}
index_title.scrub {single|<h3|target="_blank">|</a>|</h3>}
index_category.scrub {regex||<div class="smartpe_progshortdesc"(?:.*?)>(.*?)</div>(?:.*?)</div>||}
index_category.modify {remove(type=regex)|,*\s*\d{4}}
index_productiondate.scrub {regex||<div class="smartpe_progshortdesc"(?:.*?)>(.*?)</div>(?:.*?)</div>||}
index_productiondate.modify {substring(type=regex)|\d{4}}
index_temp_1.scrub {regex||<div class="smartpe_progentrylong"(?:.*?)>(.*?)</div>(?:.*?)</div>||}
index_temp_1.modify {calculate(type=char)|#}
index_description.scrub {regex||<div class="smartpe_progentrylong"(?:.*?)>(.*?)</div>(?:.*?)</div>||}
index_description.modify {remove(type=regex)|(<br>)*}
index_description.modify {addend ('index_temp_1' > "200")|....}

*index_start.scrub {single|class="progtime|">|</td>|}
*index_stop.scrub {single|}
*index_title.scrub {single|<td class="progtitle"|blank">|</a>|</td>}
*index_urlchannellogo {url|http://m.musor.tv|class="content_stripe"|<img src="|"|alt}
*
*index_urlshow {url|http://m.musor.tv|class="progtitle"|<a href="|"|target}
*index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the detail pages
*
*title.scrub {single|class="eventinfotitle"|itemprop="name">|</td>|</tr>} *on subpage
*titleoriginal.scrub {single|class="eventinfolongdesc|(|)|<br>}
*description.scrub {multi(separator="<br>" exclude="(" "Rendező:" "Főszereplők:" "Műsorvezető:" )|class="eventinfolongdesc|">|</td>|</tr>}
*
*director.scrub {single(separator=", ""; ")|Rendező:||<br>|</td>|}
*actor.scrub {single(separator=", ""; ")|Főszereplők:||<br>|</td>}
*showicon.scrub {url|http://m.musor.tv|<td class="eventinfoimg" >|src="|" itemprop|</tr>}
*ratingicon.scrub {url(debug)|http://m.musor.tv|class="nownextrating">|src="|" title|</span>}
*rating.scrub {single|class="nownextrating">|title="|" height|</span>}
*category.scrub {single(separator="," exclude="1" "2")|class="eventinfoshortdesc|">|</td>|</tr>}
*productiondate.scrub {single|class="eventinfoshortdesc|,|</td>|<tr>}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|http://musor.tv/impresszum}
*index_site_channel.scrub {multi|class="channellistentry"|>|</a>|<br>}
*index_site_id.scrub {multi|<nav>|/mai/tvmusor/|"|</nav>}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
